Block 0 - Import Library
Block 1 - Fill an array with sample data (Python)
Block 2 - sets all the signals from rv.rst to rst 
Block 3 - Create instruction memory arrays in the following form:

    # IM0Array = [
        # 0x00000000, 0x00000001, 0x00000002, 0x00000003, 0x00000004, 0x00000005, 0x00000006, 0x00000007,
        # 0x00000000, 0x00000001, 0x00000002, 0x00000003, 0x00000004, 0x00000005, 0x00000006, 0x00000007,
        # 0x00000000, 0x00000001, 0x00000002, 0x00000003, 0x00000004, 0x00000005, 0x00000006, 0x00000007,
        # 0x00000000, 0x00000001, 0x00000002, 0x00000003, 0x00000004, 0x00000005, 0x00000006, 0x00000007,    
        # 0x00000000, 0x00000001, 0x00000002, 0x00000003, 0x00000004, 0x00000005, 0x00000006, 0x00000007,
        # 0x00000000, 0x00000001, 0x00000002, 0x00000003, 0x00000004, 0x00000005, 0x00000006, 0x00000007,
        # 0x00000000, 0x00000001, 0x00000002, 0x00000003, 0x00000004, 0x00000005, 0x00000006, 0x00000007,
        # 0x00000000, 0x00000001, 0x00000002, 0x00000003, 0x00000004, 0x00000005, 0x00000006, 0x00000007
    # ]

Block 4 - Set all the signals of the RV cores to zero, and assert the reset signal 
    # Note it is possibly happening in the wrong order? 0 to 1. Instead of 1 to 0.

Block 5 - Write 0 to all memory blocks (0-63)
        ######## What are bits 13/14 doing???????

Block 6 - Write "data" to the core 1 memory

Block 7 - Write to each instruction memory (14/13 set to 00 to do so)

Block 8 - Runs the instructions from instruction memory (Steps for 300 times)